
public class StackReferencedBased implements IStack{

	private Node top;
	
	public StackReferencedBased()
	{
		top = null;
	}// End of constructor
	
	@Override
	public boolean isEmpty() {
		
		return top == null;
	}// End of isEmpty
	
	@Override
	public Object pop() throws StackException {
		
		if(!isEmpty())
		{
			Node temp = top;
			top = top.next;
			return temp.item;
		}
		else
		{
			throw new StackException("StackException on " + "pop: stack empty");
		}// End if
	}// End of pop

	@Override
	public void popAll() {

		top = null;
	}// End of popAll

	@Override
	public Object peek() throws StackException {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public void push(Object newItem) throws StackException {
		// TODO Auto-generated method stub
		
	}


	

}
